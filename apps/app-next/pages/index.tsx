import type { NextPage } from "next"
import Head from "next/head"
import { useState } from "react"

const Home: NextPage = () => {
  const [text, setText] = useState("")

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <button
          onClick={() => {
            // @ts-ignore
            window["deconstruct_flush"]()
          }}
        >
          flush buffer
        </button>

        <button
          onClick={() => {
            // @ts-ignore
            window["replay"]()
          }}
        >
          replay
        </button>
        <hr />
        <h1>hi</h1>
        <p>input</p>

        <input
          type="text"
          value={text}
          onChange={(e) => {
            e.preventDefault()
            e.stopPropagation()
            setText(e.target.value)
          }}
          placeholder="some text"
        />

        <p>button</p>
        <button
          onClick={() => {
            console.log("btn!")
          }}
        >
          click me
        </button>

        <p>fetch</p>
        <button
          onClick={async () => {
            const bla = await fetch(
              "https://random-data-api.com/api/users/random_user",
              {
                headers: {
                  Accept: "application/json",
                },
              }
            )
            const res = await bla.json()
            console.log(res.first_name + " " + res.last_name)
          }}
        >
          fetch!
        </button>

        <p>XMLHttpRequest</p>
        <button
          onClick={async () => {
            const xhr = new XMLHttpRequest()
            // Client has been created. open() not called yet.
            xhr.readyState === XMLHttpRequest.UNSENT && console.log("UNSENT")
            xhr.onreadystatechange = (e) => {
              let state = null
              switch (xhr.readyState) {
                case XMLHttpRequest.OPENED:
                  // open() has been called.
                  // xhr.onloadstart()
                  state = "OPENED"
                  break
                case XMLHttpRequest.HEADERS_RECEIVED:
                  // send() has been called, and headers and status are available.
                  state = "HEADERS_RECEIVED"
                  break
                case XMLHttpRequest.LOADING:
                  // Downloading; responseText holds partial data.
                  // xhr.onprogress()
                  state = "LOADING"
                  break
                case XMLHttpRequest.DONE:
                  // The operation is complete.
                  // xhr.onloadend()
                  // xhr.ontimeout()
                  // xhr.onabort()
                  state = "DONE"
                  // console.log(JSON.stringify(xhr.getAllResponseHeaders()))
                  break
              }
              console.log(state, xhr.status)
            }
            // xhr.timeout = 500
            // xhr.withCredentials = false
            // xhr.upload.addEventListener(...)
            xhr.open("GET", "https://random-data-api.com/api/users/random_user" /* , async, username, password */)
            xhr.setRequestHeader("Accept", "application/json")
            xhr.send(/* body */)
            // xhr.abort()
          }}
        >
          send
        </button>
      </main>
    </div>
  )
}

export default Home
